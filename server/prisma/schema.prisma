datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  abonne    String?
  bd        DateTime?
  createdAt DateTime  @default(now())
  firstName String?
  id        String    @id @default(cuid())
  lastName  String?
  password  String
  roles     String[]
  updatedAt DateTime  @updatedAt
  username  String    @unique
}

model Team {
  colorA            String?
  colorB            String?
  colorC            String?
  country           Country?          @relation(fields: [countryId], references: [id])
  countryId         String?
  createdAt         DateTime          @default(now())
  id                String            @id @default(cuid())
  league            String?
  logo              String?
  matches           Match?            @relation(name: "local", fields: [matchesId], references: [id])
  matchesId         String?
  playerLegendaries PlayerLegendary[]
  players           Player[]
  updatedAt         DateTime          @updatedAt
  visitor           Match             @relation(name: "MatchVisitorTeamVisitor")
}

model Country {
  code      String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  name      String?
  stades    Stade[]
  teams     Team[]
  updatedAt DateTime @updatedAt
}

model Player {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  league    String?
  myTeams   MyTeam[]
  name      String?
  number    String?
  team      Team?    @relation(fields: [teamId], references: [id])
  teamId    String?
  updatedAt DateTime @updatedAt
}

model Match {
  createdAt DateTime  @default(now())
  date      DateTime?
  id        String    @id @default(cuid())
  local     Team      @relation(name: "local")
  updatedAt DateTime  @updatedAt
  visitor   Team?     @relation(name: "MatchVisitorTeamVisitor", fields: [visitorId], references: [id])
  visitorId String?
}

model Goalkeeper {
  createdAt          DateTime     @default(now())
  goalkeeper         Goalkeeper?  @relation(name: "GoalkeeperOnGoalkeepers", fields: [goalkeeperId], references: [id])
  goalkeeperId       String?
  goalkeepers        Goalkeeper[] @relation(name: "GoalkeeperOnGoalkeepers")
  id                 String       @id @default(cuid())
  positionGoalkeeper String?
  updatedAt          DateTime     @updatedAt
}

model MyTeam {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  players   Player[]
  updatedAt DateTime @updatedAt
}

model Stade {
  country   Country? @relation(fields: [countryId], references: [id])
  countryId String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  name      String?
  updatedAt DateTime @updatedAt
}

model PlayerLegendary {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  name      String?
  team      Team?    @relation(fields: [teamId], references: [id])
  teamId    String?
  updatedAt DateTime @updatedAt
}